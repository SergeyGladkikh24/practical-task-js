{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["window.onload = () =>{\r\n\r\n\tvar categoryList = ['id', 'firstName', 'lastName', 'email', 'phone']; //список заголовков таблицы\r\n\tvar nowPage = 1; // активная страница;\r\n\tvar amountData = 20; //  количество строк таблицы данных на странице;\r\n\tvar arrData; // массив данных;\r\n\tvar showList; // массив данных который отображается на 1-ой странице;\r\n\tvar searchData; // массив который будем перебирать в функции поиска;\r\n\r\n\t$('.btn_load.first').on('click',startLoadFirst);\r\n\t$('.btn_load.second').on('click',startLoadSecond);\r\n\t$('.btn_prev').on('click', prevPage);\r\n\t$('.btn_next').on('click', nextPage);\r\n\t$('.search__btn').on('click', funcSearch);\r\n\t$('.search__input').on('keypress',funcSearch);\r\n\r\n\r\n\t// Функция 1-ой(1000чел) кнопки передает в функцию getData url\r\n\r\n\tfunction startLoadFirst(){\r\n\t\t$('.btn_load.second').off('click',startLoadSecond);\r\n\t\tvar url = 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&adress={addressObject}&description={lorem|32}';\r\n\t\tgetData(url);\r\n\r\n\t}\r\n\r\n\r\n\t// Функция 2-ой(32 чел) кнопки передает в функцию getData url\r\n\r\n\tfunction startLoadSecond(){\r\n\t\t$('.btn_load.first').off('click',startLoadSecond);\r\n\t\tvar url = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&adress={addressObject}&description={lorem|32}';\r\n\t\tgetData(url);\r\n\t}\r\n\r\n\r\n\t//Функция принимает url и загружает по средствам ajax данные с сервера\r\n\r\n\tfunction getData(url){\r\n\t\t$.ajax({\r\n\t\t\turl: url,\r\n\t\t\ttype:'GET',\r\n\t\t\tbeforeSend:funcBefore,\r\n\t\t\tsuccess:funcSuccess\r\n\t\t}).catch(function(err){\r\n\t\tconsole.error('Ошибка!Невозможно загрузить данные.',err);\r\n\t\t$('.sort-data__loading').css('display','none');\r\n\t\t$('.sort-data_error').html('Ошибка при загрузке данных с сервера');\r\n\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// Функция показывает процесс загрузки данных(progress-bar)\r\n\r\n\tfunction funcBefore(){\r\n\t\t$('.sort-data__loading ').css('display','block');\r\n\t}\r\n\r\n\r\n\t// Функция по завершению загрузки принимает данные с сервера в формате объекта и передает их функции которая создает таблицу с данными\r\n\r\n\tfunction funcSuccess(data){\r\n\t\t$('.sort-data_error').css('display','none');\r\n\t\t$('.sort-data__loading').css('display','none');\r\n\t\t$('.btn_load').css('display','none');\r\n\t\tsearchData = data;\r\n\t\tarrData = searchData;\r\n\r\n\t\tcreateTable(arrData);\r\n\t}\r\n\r\n\r\n\t// Функция принимает данные и строит таблицу\r\n\r\n\tfunction createTable(arr,page){\r\n\t\tvar elemsHTML = \"<thead><tr class='sort-data__table-row'>\";\r\n\t\tvar newElem;\r\n\r\n\t\tshowList = [];\r\n\r\n\t\tif(!page || page < 1){\r\n\t\t\tnowPage = 1;\r\n\t\t} else if(page > numPages()) {\r\n\t\t\tnowPage = numPages();\r\n\t\t}\r\n\r\n\t\tfor (var i = (nowPage - 1) * amountData; i < nowPage * amountData && i < arr.length; i++) {\r\n\t\t    if (!arr[i]){\r\n\t\t    \tbreak;\r\n\t\t    } else{\r\n\t\t    \t showList[i] = arr[i];\r\n\t\t    }\r\n\t  \t}\r\n\r\n\r\n\t  \t// Создаем заголовки таблицы\r\n\r\n\t  \tfor(var j = 0; j < categoryList.length; j++){\r\n\t  \t\tnewElem = \"<td class=' sort-data__table-cell sort-data__table-cell_head'>\" + categoryList[j] + \"</td>\";\r\n\t  \t\telemsHTML += newElem;\r\n\t  \t}\r\n\t  \telemsHTML += \"</tr></thead><tbody>\";\r\n\r\n\r\n\t  \t// Создание таблицы с данными в ячейках\r\n\r\n\t  \tfor(var k = 0; k < showList.length; k++){\r\n\t  \t\telemsHTML += \"<tr class='sort-data__table-row'>\";\r\n    \t\tnewElem = '';\r\n\r\n    \t\tfor(var key in showList[k]){\r\n    \t\t\tif (showList[k].hasOwnProperty(key)) { // Проверяем содержит ли элемент указанное значение\r\n\r\n\t\t\t        if ($.inArray(key, categoryList) !== -1) { // Метод проверяет наличие заданного элемента в массиве и возвращает индекс \r\n\t\t\t          newElem += \"<td class='sort-data__table-cell'>\" + showList[k][key] + \"</td>\";\r\n\t\t\t        }\r\n\t\t\t    }\r\n\r\n    \t\t}\r\n\r\n    \t\t elemsHTML += newElem + \"</tr>\";\r\n\t  \t}\r\n\r\n\t  \telemsHTML += \"</tbody>\";\r\n\r\n\t  \t// Вывод таблицы на экран браузера\r\n\r\n\t  \t$('.sort-data__search, .sort-data__nav, .sort-data__view').removeClass('hide');\r\n\t  \t$('.sort-data__table').html(elemsHTML);\r\n  \t\t$('.sort-data__page-number').html(nowPage + ' / ' + numPages());\r\n  \t\t$(\"tbody .sort-data__table-cell\").on('click', showInfoWindow);\r\n  \t\t$(\".sort-data__table-cell_head\").on('click', sortData);\r\n  \t\t\r\n  \t\t$('.btn_load.first').on('click',startLoadFirst);\r\n\t\t$('.btn_load.second').on('click',startLoadSecond);\r\n\r\n  \t\tchangeBtnState();\r\n\r\n\r\n\r\n\t}\r\n\r\n\t// Функция изменяет состояние кнопок пагинации\r\n\r\n\tfunction changeBtnState(){\r\n\r\n\t\tvar buttonNext = $('.btn_next');\r\n\t\tvar buttonPrev = $('.btn_prev');\r\n\r\n\t\tif(nowPage == 1){\r\n\t\t\tbuttonPrev.attr('disabled','disabled');\r\n\t\t} else {\r\n\t\t\tbuttonPrev.removeAttr('disabled');\r\n\t\t}\r\n\r\n\t\tif(nowPage == numPages()){\r\n\t\t\tbuttonNext.attr('disabled','disabled');\r\n\t\t} else {\r\n\t\t\tbuttonNext.removeAttr('disabled');\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Функция генерирует колличество страниц \r\n\r\n\tfunction numPages() {\r\n \t return Math.ceil(arrData.length / amountData);\r\n\t}\r\n\r\n\t// Функции настройки переключения страниц\r\n\r\n\tfunction prevPage(){\r\n\t\tif(nowPage > 1){\r\n\t\t\tnowPage--;\r\n\t\t\tcreateTable(arrData,nowPage);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction nextPage(){\r\n\t\tif(nowPage < numPages()){\r\n\t\t\tnowPage++;\r\n\t\t\tcreateTable(arrData,nowPage);\r\n\t\t}\r\n\t}\r\n\r\n\t// Функция вывода информации о человеке в отдельном окне внизу\r\n\r\n\tfunction showInfoWindow(){\r\n\t\tvar ind = $(this).parent().index();\r\n\r\n\t\t$('.contact__name').html(showList[ind].firstName + ' ' + showList[ind].lastName);\r\n\t\t$('.contact__descr').html(showList[ind].description);\r\n\t\t$('.contact__address').html(showList[ind].adress.streetAddress);\r\n\t\t$('.contact__city').html(showList[ind].adress.city);\r\n\t\t$('.contact__state').html(showList[ind].adress.state);\r\n\t\t$('.contact__index').html(showList[ind].adress.zip);\r\n\t}\r\n\r\n\t// Функция сортирует данные в таблице\r\n\r\n\tfunction sortData(){\r\n\t\tvar index = $(this).index();\r\n\r\n\t\tif($(this).hasClass('increase')){\r\n\t\t\t$(this).removeClass('increase');\r\n\t\t\tarrData.reverse();\r\n\t\t\tcreateTable(arrData);\r\n\t\t\treturn $($('.sort-data__table-cell_head')[index]).addClass('decrease');\r\n\t\t}\r\n\r\n\t\tvar ind = categoryList[index];\r\n\r\n\t\tvar sortArr = arrData.sort(sortFunc);\r\n\r\n\t\tfunction sortFunc(a,b){\r\n\t\t\tif(a[ind] > b[ind]){\r\n\t\t\t\treturn 1;\r\n\t\t\t} else if (a[ind] === b[ind]){\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcreateTable(sortArr);\r\n\t\t$($('.sort-data__table-cell_head')[index]).addClass('increase');\r\n\r\n\t}\r\n\r\n\r\n\t// Функция поиска по данным таблицы\r\n\r\n\tfunction funcSearch(event){\r\n\t\tif(event.type == 'click' || event.keyCode == 13){\r\n\t\t\tvar value = $('.search__input').val();\r\n\t\t\tvar newObj = [];\r\n\t\t\tarrData = [];\r\n\t\t\tfor(var i = 0; i < searchData.length; i++){\r\n\t\t\t\tvar obj = searchData[i];\r\n\t\t\t\tvar transformArr = [obj.id, obj.firstName, obj.lastName, obj.email, obj.phone].join(' ');\r\n\t\t\t\tvar index = transformArr.indexOf(value);\r\n\t\t\t\tif(index !== -1){\r\n\t\t\t\t\tnewObj.push(obj);\r\n\t\t\t\t} \r\n\t\t\t}\r\n\r\n\t\t\tif(newObj.length === 0){\r\n\t\t\t\tnowPage = 1;\r\n   \t\t\t\t$(\".sort-data__table\").html('<tr><td>Нет совпадений</tr></td>');\r\n\t\t\t} else {\r\n\t\t\t\tarrData = newObj;\r\n\t\t\t\tcreateTable(arrData);\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n}"],"file":"script.js"}